apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  selector:
    app: zookeeper
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata: 
  name: zookeeper
spec: 
  replicas: 1
  serviceName: zookeeper
  template:
    metadata: 
      labels: 
        app: zookeeper
    spec:
      securityContext: 
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: zookeeper
        image: "registryv2.inspur.com:5000/zookeeper-service:mips-2019031413"
        imagePullPolicy: Always
        ports: 
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name : ZK_REPLICAS
          value: "1"
        volumeMounts: 
        - mountPath: /zk_data
          name: data
        - mountPath: /zk_datalog
          name: datalog
        command: 
        - sh
        - -c
        - zkGenConfig.sh && zkServer.sh start-foreground
        readinessProbe:
          exec:
            command:
            - zkOK.sh
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - zkOK.sh
          initialDelaySeconds: 10
          timeoutSeconds: 5

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: 
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: standard
  - metadata:
      name: datalog
    spec:
      accessModes: 
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: standard