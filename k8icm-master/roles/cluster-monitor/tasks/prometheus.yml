- block:
    - name: 尝试推送离线 prometheus 镜像（若执行失败，可忽略）
      copy: src={{ base_dir }}/down/{{ prometheus_offline }} dest=/opt/kube/images/{{ prometheus_offline }}
      when: 'prometheus_offline in download_info.stdout'
    
    - name: 获取prometheus离线镜像推送情况
      command: "ls /opt/kube/images"
      register: image_info     
 
    - name: 导入 prometheus的离线镜像（若执行失败，可忽略）
      shell: "{{ bin_dir }}/docker load -i /opt/kube/images/{{ prometheus_offline }}"
      when: 'prometheus_offline in image_info.stdout'
  when: '"prometheus" not in pod_info.stdout  and prometheus_install == "yes"'
  ignore_errors: true

- block:
    - name: 在deploy 节点创建monitor相关目录
      file: path={{ item }} state=directory
      with_items:
      - /opt/kube/
      - /opt/kube/kube-system/
      - /opt/kube/kube-system/prometheus
    
    - name: 准备 prometheus 的部署文件 1
      file:
        path: /opt/kube/kube-system/prometheus/{{ item.path }}
        state: directory
        mode: '{{ item.mode }}'
      with_filetree: ../templates/prometheus
      when: item.state == 'directory'

    - name: 准备 prometheus 的部署文件 2
      template:
        src: '{{ item.src }}'
        dest: /opt/kube/kube-system/prometheus/{{ item.path }}
        mode: '{{ item.mode }}'
      with_filetree: ../templates/prometheus
      when: item.state == 'file'

    - name: 创建 prometheus部署
      shell: "{{ bin_dir }}/kubectl apply -f /opt/kube/kube-system/prometheus/"
      delegate_to: "{{ groups.deploy[0] }}"
      run_once: true
  when: '"prometheus" not in pod_info.stdout  and prometheus_install == "yes"'
